(concat [:hats 3 5] [:a :b :c])
(vec '(1 2 3))
(chabad.routes.app/root)
chabad.routes.app/root
(reduce (fn [acc val] (println acc)(println val)){}{:hats 3 :farts 5})
(str :farts)
(name 5)
(str 56)
(chabad.routes.app/root
)
(chabad.routes.app/root)
(chabad.routes.app/login)
(match /fart/ "fart")
(match #"fart" "hat")
(re-find #"fart" "hat")
(re-find #"fart" "gofartme")
(keyword "hat")
(keyword 'hat')
(keyword 'hat)
(assoc {:hat 6} :man "biscuit")
(chabad.routes.app/login)
(chabad.routes.app/login {:fart "candy"})
(re-pattern "hats")
(chabad.routes.app/login {:fart "candy"})
(chabad.routes.app/login {:fart "candy" :bitch 42})
(chabad.routes.app/login)
(name 'nomen)
(def x "hat")
(name hat)
(name x)
(symbol "toast")
(chabad.helpers.routing/root)
(chabad.helpers.routing/build-route :root)
(keyword "corn" "dog")
(map (fn [[k v]] (println k) (println v)) {:hat "5" :corn "dog"})
(lower "HAT")
(downcase "HAT")
(keyword 'hat)
(keyword :corn)
(keyword "cheeseman")
(chabad.helpers.routing/url-for 'welcome-root)
(chabad.helpers.routing/url-for :welcome-root)
(chabad.helpers.routing/get-route :welcome-root)
@chabad.helpers.routing/|routemap|
(chabad.helpers.routing/get-route :app-root)
(doseq [[k v] {:hat "candy" :corn "dog"}] (println k) (println v))
(chabad.helpers.routing/get-route :app-root)
(chabad.helpers.routing/get-route :core-root)
(chabad.helpers.routing/url-for :core-root)
(chabad.helpers.routing/url-for :core-root {})
(chabad.helpers.routing/url-for :core-root)
(chabad.helpers.routing/get-route :core-root)
(chabad.helpers.routing/url-for :core-root)
